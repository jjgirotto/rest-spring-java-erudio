{
	"info": {
		"_postman_id": "e94621e1-394a-4306-8dcc-042f9dccbea3",
		"name": "REST API's RESTful from 0 to AWS  with Java 21,  Spring Boot 3.2.0 and Docker",
		"description": "Some description about your API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "38102727"
	},
	"item": [
		{
			"name": "person",
			"item": [
				{
					"name": "Finds all People",
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/person/v1",
						"description": "Finds all People"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1",
								"description": "Finds all People"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1",
								"description": "Finds all People"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1",
								"description": "Finds all People"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1",
								"description": "Finds all People"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1",
								"description": "Finds all People"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Updates a Person",
					"request": {
						"method": "PUT",
						"header": [],
						"url": "{{baseUrl}}/api/person/v1",
						"description": "Updates a Person by passing in a JSON, XML or YML representation of the person!"
					},
					"response": [
						{
							"name": "Updated",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Updates a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Updates a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Updates a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Updates a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Updates a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Adds a new Person",
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{baseUrl}}/api/person/v1",
						"description": "Adds a new Person by passing in a JSON, XML or YML representation of the person!"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Adds a new Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Adds a new Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Adds a new Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{baseUrl}}/api/person/v1",
								"description": "Adds a new Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finds a Person",
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/person/v1/1",
						"description": "Finds a Person"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/1",
								"description": "Finds a Person"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/1",
								"description": "Finds a Person"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/1",
								"description": "Finds a Person"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/1",
								"description": "Finds a Person"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/1",
								"description": "Finds a Person"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/1",
								"description": "Finds a Person"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Deletes a Person",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8080/api/person/v1/12",
						"description": "Deletes a Person by passing in a JSON, XML or YML representation of the person!"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/12",
								"description": "Deletes a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/12",
								"description": "Deletes a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/12",
								"description": "Deletes a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/12",
								"description": "Deletes a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "http://localhost:8080/api/person/v1/12",
								"description": "Deletes a Person by passing in a JSON, XML or YML representation of the person!"
							},
							"_postman_previewlanguage": "",
							"header": "",
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "books",
			"item": [
				{
					"name": "Finds a Book",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/books/v1/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"books",
								"v1",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"description": "(Required) "
								}
							]
						},
						"description": "Finds a Book"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}"
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Deletes a book",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/books/v1/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"books",
								"v1",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes a book by passing in a JSON, XML or YML representation of the book!"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books/v1/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"v1",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finds all books",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/api/books/v1",
						"description": "Finds all books"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<long>\",\n    \"title\": \"<string>\",\n    \"author\": \"<string>\",\n    \"launchDate\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"_links\": {\n      \"dolore_7\": {\n        \"href\": \"<string>\",\n        \"hreflang\": \"<string>\",\n        \"title\": \"<string>\",\n        \"type\": \"<string>\",\n        \"deprecation\": \"<string>\",\n        \"profile\": \"<string>\",\n        \"name\": \"<string>\",\n        \"templated\": \"<boolean>\"\n      },\n      \"magna_3\": {\n        \"href\": \"<string>\",\n        \"hreflang\": \"<string>\",\n        \"title\": \"<string>\",\n        \"type\": \"<string>\",\n        \"deprecation\": \"<string>\",\n        \"profile\": \"<string>\",\n        \"name\": \"<string>\",\n        \"templated\": \"<boolean>\"\n      }\n    }\n  },\n  {\n    \"id\": \"<long>\",\n    \"title\": \"<string>\",\n    \"author\": \"<string>\",\n    \"launchDate\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"_links\": {\n      \"do_d\": {\n        \"href\": \"<string>\",\n        \"hreflang\": \"<string>\",\n        \"title\": \"<string>\",\n        \"type\": \"<string>\",\n        \"deprecation\": \"<string>\",\n        \"profile\": \"<string>\",\n        \"name\": \"<string>\",\n        \"templated\": \"<boolean>\"\n      }\n    }\n  }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Updates a book",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/books/v1",
						"description": "Updates a book by passing in a JSON, XML or YML representation of the book!"
					},
					"response": [
						{
							"name": "Updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"address\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"_links\": {\n    \"esse_15c\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"deserunt_49\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Adds a new book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/books/v1",
						"description": "Adds a new book by passing in a JSON, XML or YML representation of the book!"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"author\": \"<string>\",\n  \"launchDate\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"_links\": {\n    \"occaecat_dab\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    },\n    \"nulla_26\": {\n      \"href\": \"<string>\",\n      \"hreflang\": \"<string>\",\n      \"title\": \"<string>\",\n      \"type\": \"<string>\",\n      \"deprecation\": \"<string>\",\n      \"profile\": \"<string>\",\n      \"name\": \"<string>\",\n      \"templated\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books/v1"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}